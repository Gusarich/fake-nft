#include "imports/stdlib.fc";

(int, slice, cell) load_data() inline {
    slice ds = get_data().begin_parse();
    return (ds~load_uint(1), ds~load_msg_addr(), ds~load_ref());
}

() save_data(int init?, slice owner, cell content) impure inline {
    set_data(begin_cell()
        .store_uint(init?, 1)
        .store_slice(owner)
        .store_ref(content)
    .end_cell());
}

() recv_internal() {
    (int init?, slice owner, cell content) = load_data();
    if (~ init?) {
        init? = 1;
        send_raw_message(begin_cell()
            .store_uint(0x10, 6)
            .store_slice(owner)
            .store_coins(5000000)
            .store_uint(0, 107)
            .store_uint(0x05138d91, 32)
            .store_uint(0, 64)
            .store_slice("0"s)
            .store_uint(0, 1)
        .end_cell(), 0);
        save_data(init?, owner, content);
    }
}

(int, int, slice, slice, cell) get_nft_data() method_id {
    (int init?, slice owner, cell content) = load_data();
    return (init?, 0, "0"s, owner, content);
}